# test_existing_customer.py

# Import tr·ª±c ti·∫øp c√°c h√†m t·ª´ automation_app.py
from auto_dk import _initialize_driver, _login_to_timesoft, _automate_for_existing_customer_sync, MEMBERSHIP_INDEX_MAP_YOGA, MEMBERSHIP_INDEX_MAP_GYM

import time
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, WebDriverException

def run_test_existing_customer(phone_number, service_type, membership_type):
    """
    H√†m ƒë·ªÉ ch·∫°y th·ª≠ nghi·ªám t·ª± ƒë·ªông h√≥a kh√°ch c≈© m·ªôt c√°ch ƒë·ªôc l·∫≠p.
    """
    print(f"\n--- B·∫Øt ƒë·∫ßu Test T·ª± ƒë·ªông h√≥a Kh√°ch c≈© ---")
    print(f"S·ªë ƒëi·ªán tho·∫°i: {phone_number}")
    print(f"Lo·∫°i d·ªãch v·ª•: {service_type}")
    print(f"G√≥i t·∫≠p: {membership_type}")

    result = _automate_for_existing_customer_sync(phone_number, service_type, membership_type)

    if result["status"] == "success":
        print(f"üéâ Test th√†nh c√¥ng: {result['message']}")
    else:
        print(f"‚ùå Test th·∫•t b·∫°i: {result['message']}")

    print(f"--- K·∫øt th√∫c Test T·ª± ƒë·ªông h√≥a Kh√°ch c≈© ---")

if __name__ == "__main__":
    # --- C·∫§U H√åNH TH√îNG TIN TEST ---
    TEST_PHONE_NUMBER = "0971166684" # Thay b·∫±ng SƒêT c·ªßa kh√°ch h√†ng c≈© c√≥ th·∫≠t trong h·ªá th·ªëng Timesoft
    TEST_SERVICE_TYPE = "yoga"       # Ho·∫∑c "yoga"
    TEST_MEMBERSHIP_TYPE = "1year"  # C√°c l·ª±a ch·ªçn kh√°c: "day", "week", "3months", "6months", "year"

    # Ch·∫°y h√†m test
    run_test_existing_customer(TEST_PHONE_NUMBER, TEST_SERVICE_TYPE, TEST_MEMBERSHIP_TYPE)

    # --- V√≠ d·ª• test v·ªõi c√°c th√¥ng tin kh√°c ---
    # run_test_existing_customer("0987654321", "yoga", "3months")